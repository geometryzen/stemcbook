=== React

image:images/templates/React.svg[]

https://react.dev

==== Introduction

React is a popular approach to building web user interfaces. This section describes the steps you must take to use React in STEMCstudio. It is not a general React tutorial.

==== How it Works

React is described as a library for building user interfaces. It provides an excellent Developer Experience (DX) because of its technical underpinnings; React uses the _jsx_ standard as the file format which is an extension of JavaScript to support HTML creating through the DOM. Furthermore, this format is understood by TypeScript and extended to give a _tsx_ standard, which is _jsx__ with TypeScript type annotations. What this amounts to is that the STEMCstudio development environment is able to give you lots of help in authoring your user interface code.

==== Getting Started

The package dependencies required for running React in STEMCstudio are `react`, `react-dom`, `csstype`, and `prop-types`. 

[source,json,linenos]
----
include::https://gist.githubusercontent.com/stemcstudio/498b719101fade6ada2c463df1f1e2bd/raw/package.json?cache_bust='{revdatetime}'[]
----

In addition to adding the dependencies to your _package.json_ file, it will be necessary to define overrides in _studio.config.json_:

[source,json,linenos]
----
include::https://gist.githubusercontent.com/stemcstudio/498b719101fade6ada2c463df1f1e2bd/raw/studio.config.json?cache_bust='{revdatetime}'[]
----

Finally the `jsx` property in _tsconfig.json_ should be configured to compile JavaScript extensions for `react`.

[source,json,linenos]
----
include::https://gist.githubusercontent.com/stemcstudio/498b719101fade6ada2c463df1f1e2bd/raw/tsconfig.json?cache_bust='{revdatetime}'[]
----

You are now ready to create your STEMCstudio application using the React framework.

The boilerplate code for bootstrapping your application is in the _index.tsx_ file.

[source,tsx,linenos]
----
include::https://gist.githubusercontent.com/stemcstudio/498b719101fade6ada2c463df1f1e2bd/raw/index.tsx?cache_bust='{revdatetime}'[]
----

The _index.html_ file contains an `HTMLDivElement`, which is the mounting point for the `App`.

[source,html,linenos]
----
include::https://gist.githubusercontent.com/stemcstudio/498b719101fade6ada2c463df1f1e2bd/raw/index.html?cache_bust='{revdatetime}'[]
----

The _App.tsx_ file contains the top-level component.

TIP: In this example, `App` is a function component, which is the modern and recommended way to implement React applications. The legacy approach was to extends a base class `Component` that is provided by the `react` package. 

[source,tsx,linenos]
----
include::https://gist.githubusercontent.com/stemcstudio/498b719101fade6ada2c463df1f1e2bd/raw/App.tsx?cache_bust='{revdatetime}'[]
----
