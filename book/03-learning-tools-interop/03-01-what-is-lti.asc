=== What is Learning Tools Interoperability?

((Learning Tools Interoperability)) (LTI) is a standard that defines how a web application such as a Learning Management System can host and interact with other web applications that provide learning activities and content for courses.

==== Terminology

In the LTI model, the hosting web application is generically known as a _platform_ and the hosted web application is known as a _tool_. The _platform_ and _tool_ communicate through secure web network interactions. The initial registration of a _tool_ with a _platform_ results in each party exchanging public keys for secure communication.

==== Background

The latest version of LTI is currently version 1.3 and is managed by the IMS Global consortium.

NOTE: The version 1.3 has caused considerable confusion because it is not backwardly compatible with the LTI 1.0 specification, and the 2.0 specification was abandoned being replaced by 1.3; a case of mixing marketing names with semantic version numbers! Other than the confusion, this should not pose any technical problems.

==== Capabilities

The 1.3 version of the standard mainly defines how a _platform_ can link to the content provided by a _tool_, and how a _tool_ can interact with the _Gradebook_ of the platform to submit scores, retrieve results, and add new _Gradebook_ items. A separate specification called _LTI Advantage_ defines how the registration process can occur in a way that hides all the complexity of exhanging security keys and othe meta information that must be exchanged between the _platform and _tool_.


==== Benefits

LTI is a dramatic improvement over the traditional _plugin_ model that requires a plugin author to provide code that is installed on the host LMS. The following table offers an at-a-glance feature and benefit comparision of the two different architectures.

[cols="1,1,1,1"]
|===
|Feature    |STEMCstudio+LTI | traditional plugin       | Benefit

|Modules    | ES6            | No                       | Scalability
|Libraries  | Open           | Closed                   | Extensibility
|Importing  | Modular        | Global Variables         | Safety
|Versioning | Yes            | No                       | Reliability
|Smart IDE  | Yes            | No                       | Productivity
|===
