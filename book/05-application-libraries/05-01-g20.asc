=== 2D Scalable Vector Graphics with g20

[#g20-ramp]
.g20 being used to render a Block on an inclined Ramp
image::book/05-application-libraries/images/g20-ramp.png[width=500,height=500]

==== Introduction

g20 provides a modern JavaScript (TypeScript) suite of ESM modules for rendering 2D graphics using Scalable Vector Graphics (SVG) in the browser. This suite of modules was expressly designed for educational purposes and use within STEMCstudio.

The home page is at https://github.com/geometryzen/g20mono.

You can view the application at the following URL:

https://www.stemcviewer.com/gists/38aa01dfe4eca3a22d3f972d17c17df2

The code for this example can be found at the following URL:

https://www.stemcstudio.com/gists/38aa01dfe4eca3a22d3f972d17c17df2

The official _npm_ page for the core package, `@g20/core`, is https://www.npmjs.com/package/@g20/core. This page informs you of the latest runtime version and provides a link to the GitHub repository. All applications using `@g20/core` will also need the shared reactive signals package, `@g20/reactive`. Other packages described on the GitHub Monorepo Home Page are optional. When using the packages in your project, ensure that the version numbers are all the same; the packages are all published together and with the same version number to guarantee that they are compatible.

==== Configuration

Configuring your STEMCstudio project to use @g20 involves creating a dependency on '@g20/core', '@g20/reactive', and '@g20/svg' in your `package.json` file. There is no need to specify any overrides (which would be in `studio.config.json`). In the following example, there is also a dependency of `g20/grid` so that we can create a Grid.

[source,json,linenos]
._package.json_
----
include::https://gist.githubusercontent.com/stemcstudio/38aa01dfe4eca3a22d3f972d17c17df2/raw/package.json?cache_bust='{revdatetime}'[]
----

As a result of this configuration, the generated _system.config.json_ and _types.config.json_ files will look like:

[source,json,linenos]
._system.config.json_
----
include::https://gist.githubusercontent.com/stemcstudio/38aa01dfe4eca3a22d3f972d17c17df2/raw/system.config.json?cache_bust='{revdatetime}'[]
----

Notice that the runtime modules are found automatically from each _package.json_ file.

Similarly, the TypeScript type definitions are found automatically from each _package.json_ file:

[source,json,linenos]
._types.config.json_
----
include::https://gist.githubusercontent.com/stemcstudio/38aa01dfe4eca3a22d3f972d17c17df2/raw/types.config.json?cache_bust='{revdatetime}'[]
----

==== Usage

In this example, the _index.html_ file provides a container for the rendered drawing (which will be an `svg` element) by providing a `div` element with an identifier so that it may be found from JavaScript code. The `class` attribute has been set to `board` so that it may be styled in the `style.css` file. Notice that the size of the rendering has been set in this file to 500 pixels by 500 pixels.

[source,html,linenos]
._index.html_
----
include::https://gist.githubusercontent.com/stemcstudio/38aa01dfe4eca3a22d3f972d17c17df2/raw/index.html?cache_bust='{revdatetime}'[]
----

In the _index.ts_ file, the `initBoard` function call constructs the svg element that holds the drawing. The `boundingBox` attribute specifies the user coordinate system. Various shapes are then constructed and added to the board. The shapes in the core (`@g20/core`) package may either be created explicitly and then added to the board, or the convenience methods on the Board can be used to combine these two steps.

[source,ts,linenos]
._index.ts_
----
include::https://gist.githubusercontent.com/stemcstudio/38aa01dfe4eca3a22d3f972d17c17df2/raw/index.ts?cache_bust='{revdatetime}'[]
----

You may want to provide some styling of your Board's container element as has been done here:

[source,ts,linenos]
._style.css_
----
include::https://gist.githubusercontent.com/stemcstudio/38aa01dfe4eca3a22d3f972d17c17df2/raw/style.css?cache_bust='{revdatetime}'[]
----

Consult the official documentation for further details on how to use @g20.
