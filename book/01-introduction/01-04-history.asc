=== A Brief History of STEMCstudio

STEMCstudio began in 2010 as a quest to create visualization software for Geometric Algebra, the 21st Century mathematical notation for geometric concepts.
It quickly became apparent that the available technologies (Java, Scala, OpenGL) created a software engineering barrier to entry for potential STEM students.

The first breakthrough came with the use of Python running in the browser.
By running in the browser, the software engineering barrier was immediately lowered because no installation was required.
Additionally, using Python's special methods allowed mathematical notation and the rich set of Geometric Algebra operators to be supported.
Using Skulpt as the Python to JavaScript converter and WebGL for 3D computer graphics, the web-based programming environment called geometryzen.org was conceived.
At the same time, libraries were provided for Geometric Algebra and Units of Measure.

But the additional layer of Python to JavaScript conversion had a downside.
The choice was either to be faithful to Python and run slowly in order to simulate Python correctly, or to use a Python-like language that was more like JavaScript and ran fast but was non-standard. It also became apparent that meaningful student projects would require more flexibility and better code organization using multi-file projects. A less obvious problem is that any popular JavaScript library would require a shim layer and new documentation in order to present a Python Application Programming Interface (API).

In 2012, another breakthrough happened. Microsoft released the language TypeScript, an enhancement to JavaScript for managing the complexity of large projects. Such a language would provide two benefits in the STEM arena. The first would be that TypeScript would allow for an Intelligent Development Environment (IDE), reducing the cognitive load for students and allowing them to focus on the STEM task at hand. A student would be able to use IDE features like context assist popups, hover-over documentation, and be alerted to syntax and semantic errors. In addition, TypeScript would execute as fast as JavaScript, making realistic simulations possible. Finally, TypeScript and JavaScript are mainstream languages of the web era.

Around 2014, STEMCstudio was conceived. The vision had shifted to encompass the idea of a more general-purpose programming tool that would support the integration of computing into the STEM curriculum. Several features were added that were informed by software development best practices that also made sound pedagogical sense. In particlular, multiple file support, automated testing, source code management, search, and documentation.

Between 2015 and 2019, STEMCstudio development continued by adding features that reduced the friction when creating and evolving applications in STEMCstudio. The philosophy is to make the use of the development environment as simple as using a pencil; and like the pencil, the student or educator is not even aware of it. These features included refactoring to rename symbols and files, navigation to symbol definitions and to type definitions, and the ability to find where a symbol is used. The collaboration feature was improved by the addition of a chat capability. Other features added include an Embedding Builder, Editor Preferences, and the ability to customize the workspace appearance.

In 2020, STEMCstudio was presented at the 1st annual JSXGraph conference. This began a collaboration to streamline the use of STEMCstudio for authoring Learning Management System (Moodle) questions. This was a surprising development as STEMCstudio had been conceived for students and educators to used in a more Project Based Learning mode. The collaboration resulted in two workflows for authoring questions; one is specific to JSXGraph and the other is completely general and can be used to author any type of interactive question. A STEMCviewer was also created that loads completed applications rapidly.

In 2021 support was added for the Learning Tools Interoperability 1.3 standard by IMSGlobal. This represents the next generation of Learning Activity Authoring.

In 2022 the method for importing arbitrary external libraries was documented and the _STEMCstudio Book_ was begun.  

Architecturally, STEMCstudio has become a hybrid AngularJS/Angular application built using the Angular CLI and in a @nrwl mono-repository. This positions STEMCstudio in future for a full conversion to Angular, giving a more elegant user experience, and better performance.
